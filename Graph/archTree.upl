# This script is designed to run with Understand as Graphical View
# It displays the children of the selected architecture.
# Blog Article: https://blog.scitools.com/making-a-custom-architecture-tree/

use base ("Understand::Graph::Gv");
use strict;

our $max_depth = "Depth of Tree";
our $current_depth;

# REQUIRED - Return the short name of the graph, slashes (\\) will be used to create directories in the menu
sub name {
  return "Perl Arch Tree";
}

sub test_architecture { return 1; }

# REQUIRED - Initialization code will be called once, per external graph object.
sub init {
  my $graph = shift;
}

# REQUIRED - This is where the graph is actually run
sub do_load {
  my $graph = shift;
  my $arch = shift;

  $graph->default("rankdir","LR","graph" );

  build_tree($graph, 0, $arch);
}

sub build_tree {
  my $graph = shift;
  my $parent = shift;
  my $arch = shift;

  # create a node associated with an entity and entity name
  my $node = $graph->node($arch,$arch->name( ));

  # add an edge from the parent node to the child node
  my $edge = $graph->edge( $parent, $node ) if $parent;

  # depth first search style of creating parent/child nodes
  # return when the current depth is greater than the max depth
  foreach my $child ( $arch->children() ) {
    # $node will become the $parent of the new $node child
    build_tree($graph, $node, $child);
  }
}
