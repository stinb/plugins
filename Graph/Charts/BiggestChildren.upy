# The layout this graph plugin uses requires build 1191 or later

import understand

colors = [ "#4e8cb9", "#569f38", "#90c4e4","#a1d870","#e46721"]

def name():
  return "Biggest Children"

def description():
  return '''Visualize the largest architectural components
    <p>This plugin visualizes the largest components in your architecture using
    a pie chart. It highlights the top 5 components by lines of code, providing
    a quick overview of the major building blocks in your system.</p>

   <b>Example:</b><br>
   <img src=".doc/BiggestChildren.png">
  '''

def test_architecture(arch):
  return True;

def init(graph, arch):
  graph.options().define("Legend", ["None", "top", "left", "right", "bottom"], "bottom")


def draw(graph, arch):
  graph.set("layout", "sunburst") # Override default layout algorithm (Usually dot)

  legendCluster = None
  legend = graph.options().lookup("Legend")
  if legend != "None":
    legendCluster = graph.cluster()
    legendCluster.set("legend", legend)


  colorIdx = 0
  for child in sorted(arch.children(), key=lambda a: a.metric("CountLineCode"),reverse=True)[0:5]:
    color = colors[colorIdx]
    colorIdx += 1
    n = graph.node()
    n.set("color", color)
    n.set("fillcolor", color)
    n.set("area", str(child.metric(["CountLineCode"])["CountLineCode"]))
    if legendCluster:
      ln = legendCluster.node(child.name())
      ln.set("color", color)
      ln.set("fillcolor", color)
