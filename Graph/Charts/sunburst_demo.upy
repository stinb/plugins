# A sample sunburst chart, by lines of code

colors = [ "#4e8cb9", "#569f38", "#e45721", "#90c4e4","#a1d870","#fcad56"]

def name():
  return "Sunburst By Lines of Code"

def test_architecture(arch):
  return True;

def draw(graph, arch):
  graph.set("layout","sunburst")
  graph.set("r1","36")
  graph.set("rstep", "18")

  cIdx = 0
  clusters = dict()
  archList = [arch]
  while archList:
    a = archList.pop(0)

    # create a cluster for this architecture
    par = clusters.get(a.parent(), graph)
    cluster = par.cluster(a.name(),a)
    clusters[a] = cluster

    # Random color
    cluster.set("color", colors[cIdx % 6])
    cluster.set("fillcolor", colors[cIdx % 6])
    cIdx = cIdx + 1

    # Add children architectures
    archList.extend(a.children())

    # Add children entities
    for ent in a.ents(False):
      n = cluster.node(ent.name(),ent)
      n.set("area", str(ent.metric("CountLineCode")))
      n.set("color", colors[cIdx % 6])
      n.set("fillcolor", colors[cIdx % 6])
      cIdx = cIdx + 1
