# Graph using codecheck

colors = [ "#4e8cb9", "#569f38", "#90c4e4","#a1d870","#e46721"]

def name():
  return "Top Checks"

def test_inspection(inspection):
  return True

# Report generation
def draw(graph, inspection):
  graph.set("layout", "flatbubble") # Override default layout algorithm (Usually dot)
  graph.default("fontcolor", "#FFFFFF", "node")

  countsByCheck = dict()
  for v in inspection.violations():
    countsByCheck[v.check_id()] = countsByCheck.get(v.check_id(),0) + 1

  cur = 0
  for check, cnt in sorted(countsByCheck.items(),key=lambda item: item[1], reverse=True):
    n = graph.node(str(cnt))
    n.set("area",str(cnt))
    n.set("tooltip", "{} ({})\n{} Violations".format(inspection.config().check_name(check), check, cnt))
    n.set("color", colors[cur % len(colors)])
    n.set("fillcolor", colors[cur % len(colors)])
    cur += 1
    if cur >= 7:
      break # Only show top checks
