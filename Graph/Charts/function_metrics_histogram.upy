# The bar layout this graph plugin uses requires build 1191 or later
# This plugin relies on local imports that must be copied if this plugin
# is copied.

import und_lib.graphs.entity_histogram as entity_histogram
from und_lib.graphs.metric_charts import list_function_metrics
import und_lib.kind_util as kind_util
import understand

BINS=10

def name():
  return "Functions Metric Histogram"

def description():
  return '''<p>Display a histogram of metric values for functions.</p>
    <p>For a file, architecture, or project, create a histogram of the function
    values for the selected metric (defaults to Cyclomatic).</p>

    <p>See also the similar histograms for
    <a href="und://plugin/graph/Files%20Metric%20Histogram-Custom">files</a>,
    and <a href="und://plugin/graph/Classes%20Metric%20Histogram-Custom">classes</a>
    .</p>

    <br><img src=".doc/functions_metric_histogram.svg"/>
  '''

def tags():
  return [
    'Target: Classes',
    'Target: Files',
    'Target: Architectures',
    'Target: Project',
    'Language: Any',
    'Metrics Chart',
    'Layout: Histogram',
  ]

def test_global(db):
  return kind_util.can_contain_functions(db)

def test_architecture(arch):
  return kind_util.can_contain_functions(arch)

def test_entity(ent):
  return kind_util.can_contain_functions(ent)

def init(graph, target):
  metlist = list_function_metrics(graph.db())
  graph.options().define("Metric", metlist, "Cyclomatic")
  entity_histogram.define_histogram_opts(graph)

def draw(graph, target):
  ents = kind_util.list_functions(target, include_unresolved=True)
  metric = graph.options().lookup("Metric")
  entity_histogram.draw_entity_histogram(graph, ents, metric, tooltip_kindstr=" function(s) ")
