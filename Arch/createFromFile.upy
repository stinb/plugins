input_file= ''

import os
from subprocess import run
from pathlib import PurePath

def name():
  return "Tutorial: Create From File"

def description():
  return '''
Associate custom architectures with files based on a CSV mapping.

<p>This plugin allows you to define custom architectures for specific files in your project. It reads a 
CSV file where each line contains a file path and the corresponding architecture name. Then, it maps those 
files to their designated architectures within the Understand database.</p>

<p><b>CSV Format:</b></p>
<pre>
PATH\\TO\\FILE1,ArchitectureNameA
PATH\\TO\\FILE2,ArchitectureNameB
</pre>
'''

def define_options(arch):
    arch.options().label("label1", (
    "Path to CSV File with the architectures defined. The file should be in this format:\n\
  PATH\\TO\\FILE1,ArchitectureNameA\n\
  PATH\\TO\\FILE2,ArchitectureNameB")),
    arch.options().file("input_file", "CSV File")

def build(arch, db):

  fileValues={}
  input_file = arch.options().lookup("input_file")
  if os.path.exists(input_file):
    with open(input_file, 'r') as f:
      lines = f.readlines()
    fileValues = dict(line.strip().split(',') for line in lines)

  for file in db.ents("file ~unknown ~unresolved"):
    fullpath = PurePath(file.longname())
    fullpath=str(fullpath)
    archval = fileValues.get(fullpath)

    if archval!=None and os.path.exists(fullpath):
      arch.map(file, archval)
