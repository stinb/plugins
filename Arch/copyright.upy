"""
Create a Copyright architecture based on copyright comments.
"""
import os
import tempfile
import re
import subprocess
from pathlib import PurePath

output_file=None  #Set this to override where the debug outputfile is saved
byHand=False #This gets automatically set to true if running this script manually for testing

def name():
  return "Copyright"

def generate(arch, db):
  global output_file
  lastRun={}
  newLines=[]
  changedFiles=[]

  #Save the output file to the temp directory unless a different path is specified
  if (output_file==None and byHand):
    projectName=PurePath(db.name()).stem
    output_file = tempfile.gettempdir()+os.sep+projectName+"_licensing_arch.txt"

  fileList = db.ents("file ~unknown ~unresolved")

  startinfo = None
  if os.name == 'nt':
    startinfo = subprocess.STARTUPINFO()
    startinfo.dwFlags |= subprocess.STARTF_USESHOWWINDOW

  #Loop through each file in the project
  for i, file in enumerate(fileList):

    if (byHand):
      #Show Status if running manually
      if(i % 10 == 0):
        sys.stdout.write('\r')
        percent=i/(len(fileList))
        sys.stdout.write("%.2f%%" % (percent * 100))
        sys.stdout.flush()

    fullpath = PurePath(file.longname())
    parentDir = str(fullpath.parent)
    fullpath=str(fullpath)
    license = "None"

    result= re.search("copyright\s+([^\n]+)",file.contents(),flags=re.IGNORECASE)

    if(not result):
     result= re.search("Â©\s+([^\n]+)",file.contents()) 
    if(result):
      license = result.group(1)
      if license.startswith("law"):
        license = "None"
      license = re.sub("^\(c\)",'',license,flags=re.IGNORECASE)
      license = re.sub("^[\s\d\-,]+",'', license,flags=re.IGNORECASE)
      license = re.sub("^by",'',license,flags=re.IGNORECASE)
      license = re.sub("<\S+@\S+\.\S+>",'',license,flags=re.IGNORECASE)
      license = re.sub("\(\S+@\S+\.\S+\)",'',license,flags=re.IGNORECASE)
      license = re.sub("<http\S+>",'',license,flags=re.IGNORECASE)
      license = re.sub("\(http\S+\)",'',license,flags=re.IGNORECASE)
      license = re.sub("http\S+",'',license,flags=re.IGNORECASE)
      license = re.sub("/",'',license,flags=re.IGNORECASE)
      license = re.sub("All rights reserved",'',license,flags=re.IGNORECASE)
      license = re.sub("&\S+;",'',license,flags=re.IGNORECASE) #HTML Special characters
      license = re.sub("\d\d\d\d\s*,*\s*",'',license,flags=re.IGNORECASE) #years

      license = re.sub("-->*$",'',license,flags=re.IGNORECASE) #Strip trailing dashes
      license = re.sub("[\.,;'\"]\s*$",'',license,flags=re.IGNORECASE) #strip Trailing punctuation


      license = license.strip(' ')

      newLines.append(fullpath+"="+license)

    if(not byHand and license):
      arch.map(file, license)

  if (byHand):
    #write the date to the file
    with open(output_file, 'w') as filehandle:
      for listitem in newLines:
        filehandle.write('%s\n' % listitem)

### Not executed when run as a plugin within Understand
### For manual execution/debugging
### e.g.  upython copyright.upy myproject.und
import sys
import time
import understand
startTime = time.time()
if __name__ == '__main__':
  args = sys.argv
  db = understand.open(args[1])
  byHand=True
  generate("",db)
  executionTime = (time.time() - startTime)
  sys.stdout.write('\r')
  sys.stdout.flush()
  print("Architectures saved to "+output_file)
  print('Execution time in seconds: ' + str(executionTime))
