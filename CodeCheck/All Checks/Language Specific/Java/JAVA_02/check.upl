# Unused local variables.
use base ("Understand::Codecheck");
use strict;
use constant ERR1 => "Unused Instance Variable";

sub register_tr_text {
  my $check = shift;
  $check->add_tr_text(ERR1);
}


sub checkID { return "JAVA_02";}

sub name { return "All Checks\\Language Specific\\Java\\Unused Instance Variables.";}

sub tags {
  return (
    'Language: Java',
    'Variables',
  );
}

sub description {
  return "Unused Instance Variables";
}

sub detailed_description {
  return 'Assumptions:
 1. ignore references inside inactive code (ie #if 0...#endif).
 ';
}

sub test_language {
  my $language = shift;
  return $language =~ /Java/;
}

sub test_entity {
  return 1;
}

sub test_global {
  return 0;
}

sub check {
  my $check = shift;
  my $file = shift;
  return unless $file->kind->check("file");

  
  # loop through local variables
  my @entrefs = $file->filerefs("define","Variable member ~unknown ~unresolved",1);
  foreach my $ref(@entrefs) {
    next if $ref->ent->refs("setby ~init,useby ~inactive,modifyby");
    $check->violation($ref->ent,$ref->file,$ref->line,$ref->column,ERR1);
  }
}
