# This script is designed to run with Understand - CodeCheck
# Written by Robby Bennett
# 3-31-22


import re


ERR1 = 'Class with no method definitions should be an interface'

def ids():
    return ('JAVA_11')


def name(id):
    return {
        'JAVA_11': '''All Checks/Language Specific/Java/\
A class shall be declared an interface if no method of the class is implemented. \
''',
    }[id]


def tags(id):
    return {
        'JAVA_11': [
            'Language: Java',
            'Declarations and Definitions',
        ],

    }.get(id)

def detailed_description():
    return '''
<p>
A class shall be declared an interface if no method of the class is implemented.
</p>

<p><b>Risk Assessment</b></p>
<p>
In the Java programming language, an interface is a reference type, similar to a class, that can contain only constants, method signatures, default methods, static methods, and nested types. Method bodies exist only for default methods and static methods. Interfaces cannot be instantiatedâ€”they can only be implemented by classes or extended by other interfaces.
</p>

<p>
See:
<i>
https://docs.oracle.com/javase/tutorial/java/IandI/createinterface.html
</i>
</p>

<p><b>Noncompliant Code Example</b></p>
<pre><code language="Java">public class Enemy {
    public void attack();
}
</code></pre>
'''


def test_language(language):
    return language == 'Java'


def test_entity(file):
    return file.kind().check('java file')


def test_global():
    return False


def check(check, file):
    for classRef in file.filerefs('Define', 'Class ~TypeVariable ~Enum', True):
        classEnt = classRef.ent()

        # Check if there's a method definition
        methodDef = False
        for methodRef in classEnt.refs('Define', 'Method', True):
            methodEnt = methodRef.ent()
            if re.search(r'{', methodEnt.contents()):
                methodDef = True
                break

        # Skip classes that have method definitions
        if methodDef:
            continue

        check.violation(classEnt, file, classRef.line(), classRef.column(), ERR1)
