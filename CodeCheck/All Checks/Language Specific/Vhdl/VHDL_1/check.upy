# This script is designed to run with Understand - CodeCheck
# Written by Jordan Colbeth
# 7-12-2023

ERR1 = "Declaration of %1 '%2' is never used"

# The ID for the check
def id():
    return 'VHDL_1'

# The short name of the check
def name():
    return "All Checks/Language Specific/Vhdl/VHDL_1" +  ' Unused declarations'


def tags(id):
    return {
        'VHDL_1': [
            'Language: VHDL',
            'Declarations and Definitions',
        ],

    }.get(id)

# The short description of the check
def description():
    return 'Unused declarations.'

# The long description of the check
def detailed_description():
    return '''\
<p><b>Title</b></p>
<p>Unused Declarations</p>

<p><b>Description</b></p>
<p>Removing unused declarations in VHDL is essential for code clarity, 
maintainability, and efficient synthesis. It improves code readability, 
avoids linting errors, reduces design complexity, and promotes good programming 
practices. Additionally, it leads to smaller design files and faster compilation 
times.</p>

<p><b>Noncompliant Code Example</b></p>
<pre><code language="VHDL">\
entity Example is
    Port ( A : in STD_LOGIC;
           B : out STD_LOGIC);
end Example;

architecture UnusedDeclarations of Example is
    signal C : STD_LOGIC;   -- Unused signal
    constant D : STD_LOGIC := '1';   -- Unused constant
    
begin
    -- Some logic using A and B
    B &lt;= A;

end UnusedDeclarations;
</code></pre>

'''


# Tests the type of file
def test_entity(file):
    return file.kind().check('file')

def test_global():
    return False

def test_language(language):
    return language == 'VHDL'

def check(check, file):
    # grab all entity declarations except for those ents that are not required to be or cannot be used
    for decl_ref in file.filerefs("Declare", "~Package ~Architecture ~Label ~Process ~Entity"):
        decl_ent = decl_ref.ent()
        decl_kind = decl_ent.kindname()

        # check that ent has been used
        if not decl_ent.refs("Vhdl Useby, Vhdl Modifyby, Vhdl Setby ~Init, Vhdl Mapby, Vhdl Instantiateby, Vhdl Implementby, Vhdl Typedby"):
            check.violation(decl_ent, file, decl_ref.line(), decl_ref.column(), ERR1, decl_kind, decl_ent)
    
