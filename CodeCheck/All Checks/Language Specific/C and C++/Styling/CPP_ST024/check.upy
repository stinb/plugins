# This script is designed to run with Understand - CodeCheck
# Written by Jason Quinn
# 3-24-2022

ERR1 = "Violation: function '%1' is not separated by a blank line"


def id():
    return "CPP_ST024"

def name(id):
    return """\
All Checks/Language Specific/C and C++/Styling/Functions shall have at least one \
blank line between them"""


def tags(id):
    return {
        'CPP_ST024': [
            'Language: C',
            'Language: C++',
            'Styling',
        ],

    }.get(id)

def detailed_description():
    return """\
<p><b>Rationale</b></p>
<p>Creating space between function definitions helps improve readability, as
shown in the examples below. For the purposes of this standard, a line that
contains only a beginning or ending brace (with no remarks) will be considered a blank line.
</p>
<p><b>Examples</b></p>
<pre><code language="C++">int add(int num1, int num2) {    /* valid, blank line preceding function definition */
    return num1 + num2;
}
int sub(int num1, int num2) {    /* valid, closing curly bracket counts as blank */
    return num1 - num2;
}
/* invalid, comment counts as non-blank line preceding div() */
int div(int num1, int num2) { return num1 / num2; }
int mult(int num1, int num2) {   /* invalid, non-blank line preceding mult() */
    return num1 * num2;
}
</code></pre>
"""


def test_entity(file):
    return file.kind().check('code file, header file')

def test_language(language):
    return language == 'C++'


def check(check, file):
    lexer = None
    refs = file.filerefs("Define", "Function")

    # Go through all function refs
    for ref in refs:
        if not lexer:
            if file.lexer():
                lexer = file.lexer()
            else:
                return

        # Find the whitespace before a function
        lexeme = lexer.lexeme(ref.line(), ref.column())
        while lexeme and lexeme.token() != 'Newline':
            lexeme = lexeme.previous()

        if lexeme:
            lexeme = lexeme.previous(ignore_whitespace=True)
            if lexeme:
                # Throw violation if no blank line preceeds the function
                if (ref.line() - lexeme.line_begin()) < 2:
                    check.violation(ref.ent(), file, ref.line(), ref.column(), ERR1, ref.ent().name())
