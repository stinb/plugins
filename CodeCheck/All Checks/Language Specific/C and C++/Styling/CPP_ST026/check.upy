# This script is designed to run with Understand - CodeCheck
# Written by Jordan Colbeth
# 11-2-2020

import re

def id():
    return 'CPP_ST026'

def name():
    return "All Checks/Language Specific/C and C++/Styling/" +  'Class naming conventions'


def tags(id):
    return {
        'CPP_ST026': [
            'Language: C',
            'Language: C++',
            'Styling',
        ],

    }.get(id)

def description():
    return 'Distinct conventions should be established for class names (e.g., begin each class name with c_).'

def detailed_description():
    return """\
<p>Distinct conventions should be established for class names (e.g., begin each
class name with c_).
</p>

<p>To establish a convention particular to your project or file, use the 
options below.
</p>"""

def test_entity(file):
    return file.kind().check('code file, header file')

def test_language(language):
    return language == 'C++'

def define_options(check):
    check.option().text('Class prefix', 'Class name prefix', 'c_')

def check(check, file):

	class_name_convention = check.option().lookup('Class prefix')

	# find every data member in the file
	for class_ref in file.filerefs('Define', 'Class', True):	
		class_name = class_ref.ent().simplename()

		prefix_found = re.search(f"^{class_name_convention}", class_name)

		if not prefix_found:
			check.violation(class_ref.ent(), file, class_ref.line(), class_ref.column(), "Violation: Naming convention prefix '%1' not used in class '%2'", class_name_convention, class_name)

