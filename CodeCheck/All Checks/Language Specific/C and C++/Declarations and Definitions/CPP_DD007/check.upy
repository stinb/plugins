# This script is designed to run with Understand - CodeCheck
# Written by Jordan Colbeth
# 10-14-2020

import re

def ids():
    return ('CPP_DD007')

def name(id):
    return {
		'CPP_DD007': '''All Checks/Language Specific/C and C++/Declarations and Definitions/\
The private keyword should be used in class definitions'''
	}[id]


def tags(id):
    return {
        'CPP_DD007': [
            'Language: C',
            'Language: C++',
            'Declarations and Definitions',
        ],

    }.get(id)

def detailed_description():
    return '''\
<p>Class members declared as private can be accessed only by the functions
inside the class. They are not allowed to be accessed directly by any object
or function outside the class. It is good practice to include the private
keyword in the class definition even when there are no private members.
</p>'''

def test_entity(file):
    return file.kind().check('code file')

def test_language(language):
    return language == 'C++'

def check(check, file):

	# find every class declaration in the file
	for class_def in file.filerefs('Define', 'Class', True):

		contents = class_def.ent().contents()

		found = re.search(r'private:', contents)

		if not found:
			check.violation(class_def.ent(), file, class_def.line(), class_def.column(), "Violation: 'private' keyword not found in %1 class definition", class_def.ent())
