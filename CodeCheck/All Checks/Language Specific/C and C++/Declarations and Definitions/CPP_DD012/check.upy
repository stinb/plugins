# This script is designed to run with Understand - CodeCheck
# Written by Jason Quinn
# 06-23-2021

import re

ERR1 = """\
Layering techniques, where applicable, should be used instead of private
inheritance"""

def id():
    return 'CPP_DD012'

def name():
    return """\
All Checks/Language Specific/C and C++/Declarations and Definitions/Layering \
techniques, where applicable, should be used instead of private inheritance."""


def tags(id):
    return {
        'CPP_DD012': [
            'Language: C',
            'Language: C++',
            'Declarations and Definitions',
        ],

    }.get(id)

def detailed_description():
    return """\
<p>Layering techniques, where applicable, should be used instead of private
inheritance.</p>"""

def test_entity(file):
    return file.kind().check('code file, header file')

def test_language(language):
    return language == 'C++'

def check(check, file):
    cRefs = file.filerefs('Define', 'Class')
    for cRef in cRefs:
        refs = cRef.ent().refs('Private Base', 'Class')
        for ref in refs:
            check.violation(ref.ent(), file, ref.line(), ref.column(), ERR1)
