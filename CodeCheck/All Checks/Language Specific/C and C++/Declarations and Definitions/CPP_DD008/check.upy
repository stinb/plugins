# This script is designed to run with Understand - CodeCheck
# Written by Jason Quinn
# 05-27-2021

import re

ERR1 = 'Nesting template class definitions should be avoided.'

def id():
    return 'CPP_DD008'

def name():
    return """\
All Checks/Language Specific/C and C++/Declarations and Definitions/Nesting \
template class definitions should be avoided."""


def tags(id):
    return {
        'CPP_DD008': [
            'Language: C',
            'Language: C++',
            'Declarations and Definitions',
        ],

    }.get(id)

def detailed_description():
    return """\
<p>Nesting template class definitions should be avoided</p>"""

def test_entity(file):
    return file.kind().check('code file, header file')

def test_language(language):
    return language == 'C++'

def check(check, file):
    refs = file.filerefs('Define', 'Class Template')

    # Look through class templates and throw violation if its' parent is also a class template
    for ref in refs:
        if ref.ent().parent().kindname() == 'Class Template':
            check.violation(ref.ent(), ref.file(), ref.line(), ref.column(), ERR1)
