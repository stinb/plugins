# This script is designed to run with Understand - CodeCheck
# Written by Jason Quinn
# 05-26-2021

import re

ERR1 = 'Static data member %1 wasn\'t placed in its\' class .cpp file'

def id():
    return 'CPP_V036'

def name():
    return """\
All Checks/Language Specific/C and C++/Variables/Static data member \
initialization should be placed in the class .cpp file"""


def tags(id):
    return {
        'CPP_V036': [
            'Language: C',
            'Language: C++',
            'Variables',
        ],

    }.get(id)

def detailed_description():
    return """\
<p>Static data member initialization should be placed in the class
.cpp file. If initialization is placed in a header file (.h), a linker
error will occur if different program modules include the same
header file.</p>"""

def test_entity(file):
    return file.kind().check('code file, header file')

def test_language(language):
    return language == 'C++'

def check(check, file):
    refs = file.filerefs('Set Init', 'Member Object Static')

    # Look through Static data members
    for ref in refs:
        if ref.ent() and ref.ent().parent():
            name = ref.ent().parent().name().lower() + '.cpp'
            # Check if the class name is equal to the file name
            if not name == ref.file().name().lower():
                check.violation(ref.ent(), ref.file(), ref.line(), ref.column(), ERR1, ref.ent().name())
