# This script is designed to run with Understand - CodeCheck
# Written by Jason Quinn
# 05-24-2021

import re

ERR1 = 'reinterpret_cast operator should be avoided'

def id():
    return 'CPP_V032'

def name():
    return """\
All Checks/Language Specific/C and C++/Variables/Use of the reinterpret_cast \
operator should be avoided"""


def tags(id):
    return {
        'CPP_V032': [
            'Language: C',
            'Language: C++',
            'Variables',
        ],

    }.get(id)

def detailed_description():
    return """\
<p>Use of the reinterpret_cast operator should be avoided. This
is because the reinterpret_cast operator is usually
nonportable. When a justifiable case for its use can be made,
its presence must be clearly identified in the class or free
function interface documentation as a warning to users.</p>"""

def test_entity(file):
    return file.kind().check('code file, header file')

def test_language(language):
    return language == 'C++'

def check(check, file):
    if file and file.lexer():
        lexer = file.lexer()
    else:
        return

    lexemes = lexer.lexemes()

    for lexeme in lexemes:
        if lexeme.text() == 'reinterpret_cast':
            check.violation(file, file, lexeme.line_begin(), lexeme.column_begin(), ERR1)
