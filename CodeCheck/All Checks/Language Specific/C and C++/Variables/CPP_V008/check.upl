# Unused static global variables.
use base ("Understand::Codecheck");
use strict;
use constant ERR1 => "Unused Static Global Variable";

sub register_tr_text {
  my $check = shift;
  $check->add_tr_text(ERR1);

}


sub checkID { return "CPP_V008";}

sub name { return "All Checks\\Language Specific\\C and C++\\Variables\\Unused Static Global";}

sub tags {
  return (
    'Language: C',
    'Language: C++',
    'Variables',
  );
}

sub description{
  return "Unused Static Global Variables";
}

sub detailed_description {
  return "Assumptions:
 1. ignore references inside inactive code (ie #if 0...#endif).
 ";
}

sub test_language {
  my $language = shift;
  return $language =~ /C\+\+/;
}

sub test_entity {
  return 1;
}

sub test_global {
  return 0;
}

sub check {
  my $check = shift;
  my $file = shift;
  return unless $file->kind->check('c file');
  
  # loop through static global
  my @entrefs = $file->filerefs("define","object static global ~unresolved",1);
  ENT:foreach my $varref(@entrefs) {
      next ENT if ($varref->ent->refs("setby ~init,useby ~inactive,modifyby"));
      my @doplegangers = $check->db->lookup($varref->ent->name,"object static global unresolved",1);
      foreach my $evilTwin (@doplegangers){
        next ENT if ($evilTwin->refs("setby ~init,useby ~inactive,modifyby"));
      }
      $check->violation($varref->ent,$varref->file,$varref->line,$varref->column,ERR1);
    }
}
