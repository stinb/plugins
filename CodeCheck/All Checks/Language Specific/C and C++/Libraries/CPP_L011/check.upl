#This script is designed to run with Understand - CodeCheck
use base ("Understand::Codecheck");
use strict;


use constant ERR1 => '<signal.h> included in file %1';

sub register_tr_text() {
  my $check = shift;
  $check->add_tr_text(ERR1);
}


sub checkID { return "CPP_L011";}

sub name { return "All Checks\\Language Specific\\C and C++\\Libraries\\Signal.h should not be used";}

sub tags {
  return (
    'Language: C',
    'Language: C++',
    'Libraries',
  );
}

sub description { return "Signal handling should not be used.";}

sub detailed_description { 
  return <<"END_DESC"
<p><b>Rationale</b></p>
<p>Signal handling is largely implementation defined and varies drastically between systems. Any use of it should be fully understood.</p>

<p><b>Developer's Note</b></p>
<p>This check cannot determine a user created signal.h from the C standard library. All #include(d) files named signal.h, will be flagged.</p>

END_DESC
}

sub test_language {
  my $language = shift;
  return $language =~ /C\+\+/; #Handles C and C++
}

sub test_entity { return 1;}

sub test_global { return 0;}

sub define_options{}

sub check {
  my $check = shift;
  my $file = shift;
  return unless $file->kind->check("c file ~unknown ~unresolved");
 	foreach my $includes($file->filerefs("include","file")){
 		if($includes->ent->name eq "signal.h"){
 				$check->violation($includes->ent,$file,$includes->line,$includes->column,ERR1,$file->name);
 		}
 	}
}

