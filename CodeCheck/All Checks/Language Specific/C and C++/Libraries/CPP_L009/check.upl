#This script is designed to run with Understand - CodeCheck
#Robert Gempeler - 7/19/2010
use base ("Understand::Codecheck");
use strict;

use constant ERR1 => 'Invalid use of "offsetof" macro.';

sub register_tr_text() {
  my $check = shift;
  $check->add_tr_text(ERR1);
}


sub checkID { return "CPP_L009";}

sub name { return "All Checks\\Language Specific\\C and C++\\Libraries\\No offsetof allowed";}

sub tags {
  return (
    'Language: C',
    'Language: C++',
    'Libraries',
  );
}

sub description { return "The macro \"offsetof\" should not be used.";}

sub detailed_description { return <<"END_DESC"
<p><b>Rationale</b></p>
Bitfields and imcompatible types can lead to undefined behaviour with this macro.</p>
END_DESC
}

sub test_language {
  my $language = shift;
  return $language =~ /C\+\+/; #Handles C and C++
}

sub test_entity { return 1;}

sub test_global { return 0;}

sub define_options{}


sub check {
  my $check = shift; 
  my $file = shift; 
  return unless $file->kind->check('c file'); 

	  my @refs = $file->filerefs("call,use","function, macro",0);
	  foreach my $ref (@refs){
		  if ($ref->ent->name =~ /^offsetof$/){ 
			  $check->violation($ref->ent(),$file,$ref->line(),$ref->column(),ERR1);
		  }
	  }  
}
