# This script is designed to run with Understand - CodeCheck
# Written by Jason Quinn
# 07-06-2021

import re

ERR1 = 'Overloaded operator new hides the global new operator'

def id():
    return 'CPP_M016'

def name():
    return """\
All Checks/Language Specific/C and C++/Memory Allocation/Overloaded new operator \
should not hide the global new operator"""


def tags(id):
    return {
        'CPP_M016': [
            'Language: C',
            'Language: C++',
            'Memory Allocation',
        ],

    }.get(id)

def detailed_description():
    return """\
<p>Overloaded new operator should not hide the global new operator</p>"""

def test_entity(file):
    return file.kind().check('code file, header file')

def test_language(language):
    return language == 'C++'

def check(check, file):
    refs = file.filerefs('Define', 'Function')

    for ref in refs:
        # Skip if not named operator new
        if not ref.ent().name() == 'operator new':
            continue

        # Skip if the parent is a class
        if ref.ent().parent().kindname() == 'Class':
            continue

        check.violation(ref.ent(), file, ref.line(), ref.column(), ERR1)
