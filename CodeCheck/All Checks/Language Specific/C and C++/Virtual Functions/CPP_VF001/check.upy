# This script is designed to run with Understand - CodeCheck
# Written by Jason Quinn
# 06-29-2021

import re

ERR1 = """\
Access levels are mixed when %1 is overrided"""

def id():
    return 'CPP_VF001'

def name():
    return """\
All Checks/Language Specific/C and C++/Virtual Functions/Access levels should \
not be mixed (public, protected, private) when overriding virtual functions."""


def tags(id):
    return {
        'CPP_VF001': [
            'Language: C',
            'Language: C++',
            'Virtual Functions',
        ],

    }.get(id)

def detailed_description():
    return """\
<p>Access levels should not be mixed (public, protected,
private) when overriding virtual functions.</p>"""

def test_entity(file):
    return file.kind().check('code file, header file')

def test_language(language):
    return language == 'C++'

def check(check, file):
    refs = file.filerefs('Define', 'Virtual')

    # Find all Overrides of this virtual function
    for ref in refs:
        vRefs = ref.ent().refs('Overriddenby', 'Virtual')
        for vRef in vRefs:
            # Check for differences in the kindname of the virtual function
            if (re.search(r'Public', ref.ent().kindname()) and not re.search(r'Public', vRef.ent().kindname())) or (re.search(r'Private', ref.ent().kindname()) and not re.search(r'Private', vRef.ent().kindname())) or (re.search(r'Protected', ref.ent().kindname()) and not re.search(r'Protected', vRef.ent().kindname())):
                check.violation(ref.ent(), file, ref.line(), ref.column(), ERR1, ref.ent().name())
