# This script is designed to run with Understand - CodeCheck
# Written by Jason Quinn
# 05-19-2021

import re

ERR1 = 'C version header file (.h) used instead of C++ header file (\'c\' prefix)'

def ids():
    return ('CPP_H017')

def name(id):
    return {
        'CPP_H017': '''All Checks/Language Specific/C and C++/Headers/\
C++ version of the header file should be used'''
    }[id]


def tags(id):
    return {
        'CPP_H017': [
            'Language: C',
            'Language: C++',
            'Headers',
        ],

    }.get(id)

def detailed_description():
    return '''\
<p>When including C standard header files, the C++ version of
the header file (files prefixed with a "c") should be included
instead of the C version (files ending with a ".h"). <i>For
example, include 'cmath' instead of 'math.h'. These C++
header files place the functions into the standard namespace
(std) instead of the global namespace. Putting the contents of
these header files into the standard namespace allows for the
C standard library to appear consistent with the C++ standard
library, which also is placed into the standard namespace. It
also prevents the global namespace from being polluted with
content it does not need.</i></p>'''

def test_entity(file):
    return file.kind().check('code file, header file')

def test_language(language):
    return language == 'C++'

def check(check, file):

    refs = file.filerefs('include')

    for ref in refs:
        if re.search(r'\.h$', ref.ent().name()):
            check.violation(ref.ent(), file, ref.line(), ref.column(), ERR1)
