# This script is designed to run with Understand - CodeCheck
# Written by Jordan Colbeth
# 10-12-2020

def id():
    return ('CPP_H013')

def name(id):
    return {
		'CPP_H013': "All Checks/Language Specific/C and C++/Headers/" +  """\
Names of private header files should not be identical to names of library header files"""
	}[id]

def tags(id):
    return {
        'CPP_H013': [
            'Language: C',
            'Language: C++',
            'Headers',
        ],

    }.get(id)

def description():
    return """\
Names of private header files should not be identical to names of library header files."""

def detailed_description():
    return """\
<p>It is generally bad coding practice to give a private header file the same
name as a C library header file. Using conflicting header file names can result
in an incorrect file being included. </p>
<p><b>Developer's Notes</b></p><p>This CodeCheck covers the C Standard, subclause 7.1.2
[ISO/IEC 9899:2011] list of standard headers</p>"""

def test_entity(file):
    return file.kind().check('header file')

def test_language(language):
    return language == 'C++'

def check(check, file):
	lib_headers = [
		"stdio.h",
		"conio.h",
		"assert.h",
		"ctype.h",
		"cocale.h",
		"math.h",
		"setjmp.h",
		"signal.h",
		"stdarg.h",
		"stdlib.h",
		"string.h",
		"time.h",
		"complex.h",
		"stdalign.h",
		"errno.h",
		"locale.h",
		"stdatomic.h",
		"stdnoreturn.h",
		"uchar.h",
		"fenv.h",
		"wchar.h",
		"tgmath.h",
		"stdbool.h",
		"float.h",
		"inttypes.h",
		"iso646.h",
		"stddef.h",
		"limits.h",
		"stdint.h",
		"wctype.h",
		"threads.h"]

	file_name = file.simplename()

	# check to see if the filename matches any item in list lib_headers
	if file_name.lower() in lib_headers:
		check.violation(file, file, 1, 1, "Violation: Private header file '%1' is identical to a C library header file", file)
