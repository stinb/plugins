# This script is designed to run with Understand - CodeCheck
# Written by Jason Quinn
# 05-24-2021

import re

ERR1 = """\
Standard Library header file %1 with a \'.h\' was used"""

def id():
    return 'CPP_H018'

def name():
    return """\
All Checks/Language Specific/C and C++/Headers/When including C Standard Library \
header files, C++ Standard Library header files without a '.h' appended should \
be used"""


def tags(id):
    return {
        'CPP_H018': [
            'Language: C',
            'Language: C++',
            'Headers',
        ],

    }.get(id)

def detailed_description():
    return """\
<p>When including C Standard Library header files, C++
Standard Library header files without a ‘.h’ appended should
be used. For example, ‘iostream’ should be included, not
‘iostream.h’. The ‘.h’ versions of these header files are not
standards compliant and are not guaranteed to be supplied by
any standards compliant compiler.</p>"""

def test_entity(file):
    return file.kind().check('code file, header file')

def test_language(language):
    return language == 'C++'

def check(check, file):
    if file.language() != 'C++':
        return

    # Standard Library header files show up as Unresolved Header File
    ents = file.ents('', 'Unresolved Header File')

    for ent in ents:
        # Look for '.h' in simplename
        if re.match(r'.*\.h', ent.simplename()):
            check.violation(ent, file, ent.ref().line(), ent.ref().column(), ERR1, ent.simplename())
