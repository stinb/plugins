# This script is designed to run with Understand - CodeCheck
# Written by Jason Quinn
# 05-24-2021

import re

ERR1 = 'Function argument %1 shares the same name as a class state variable'

def id():
    return 'CPP_F063'

def name():
    return """\
All Checks/Language Specific/C and C++/Functions/Member function arguments \
should not share the same name as class state variables"""


def tags(id):
    return {
        'CPP_F063': [
            'Language: C',
            'Language: C++',
            'Functions',
        ],

    }.get(id)

def detailed_description():
    return """\
<p>Member function arguments should not share the same name
as class state variables. Doing so causes the behavior of
hiding the state variables, detracts from readability, and
invites error.</p>"""

def test_entity(file):
    return file.kind().check('code file, header file')

def test_language(language):
    return language == 'C++'

def check(check, file):
    defList = []
    refs = file.refs('Define', 'Class')

    for ref in refs:
        defList = []
        # Gather class state variable names
        for defRef in ref.ent().refs('Define', '~Function'):
            defList.append(defRef.ent().name())

        # Gather member functions
        for defRef in ref.ent().refs('Define', 'Function'):
            # Go through function parameters and check if the name is a class state variable
            for r in defRef.ent().refs('Define', 'Parameter'):
                if r.ent().name() in defList:
                    check.violation(r.ent(), file, r.line(), r.column(), ERR1, r.ent().name())
