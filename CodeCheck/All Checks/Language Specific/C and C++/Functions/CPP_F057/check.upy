# This script is designed to run with Understand - CodeCheck
# Written and Converted by Kalicia Adams
# 6-14-2022
import re 

ERR1 = "Function prologue is not in a code or header file"

# The ID for the check
def ids():
    return ('CPP_F057')

# The short name of the check
def name(id):
    return {
        'CPP_F057': "All Checks/Language Specific/C and C++/Functions/Function prologue shall be in header or source"
    }[id]


def tags(id):
    return {
        'CPP_F057': [
            'Language: C',
            'Language: C++',
            'Functions',
        ],

    }.get(id)

def detailed_description():
    return """\
<p><b>Rationale</b></p>
<p>Each function shall have its own prologue - for example:
/*****************************************
* Function name: <i>[function name]</i><br>
* Description: <i>[description]</i><br>
* Notes: <i>[notes]</i><br>
* Arguments: <i>[arguments]</i><br>
* Return value: <i>[return value]</i><br>
* Errors: <i>[errors]</i><br>
* References: <i>[references]</i><br>
*****************************************/</p>
"""

def define_options(check):
    pass

def test_entity(file):
    return file.kind().check('code file, header file')

def test_global():
    return False

def test_language(language):
    return language == 'C++'

def check(check,file):
    for func in file.filerefs("Define", "Function"): #Get only Defined Functions
        if not (func.ent().comments('before', False, "definein") or func.ent().comments('before',False,"declarein")): #Check to see if the prologue is there and if it isn't in a header or code file, flag violation.
            check.violation(func.ent(), file, func.line(), func.column(), ERR1)
