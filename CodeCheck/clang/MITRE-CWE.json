{
  "CWE-787": {
    "tags": ["Language: C", "Language: C++", "Standard: Compiler Warnings", "Compiler: Default", "Warnings", "Recommended", "Standard: SciTools' Recommended Checks", "Severity: 75" ],
    "key": "array-bounds",
    "name": "Published Standards/MITRE-CWE/Out-of-bounds Write",
    "desc": {
      "text": "",
      "html": [
        "<p><b>Title</b></p>",
        "<p>A program shall not write data beyond the bounds of an allocated array or object.</p>",
        "<p><b>Description</b></p>",
        "<p>Writing data to an array or object outside its allocated bounds results in undefined behavior. This includes writing to an index greater than or equal to the array's size, or before the start of the array, as well as writing beyond the size of a dynamically allocated memory block. Such operations may corrupt memory, cause program crashes, or introduce security vulnerabilities.</p>",
        "<p><b>Rationale</b></p>",
        "<p>Out-of-bounds writes violate memory safety and can overwrite adjacent variables, control structures, or other critical data, leading to unpredictable behavior. In safety-critical systems, this can compromise system integrity or functionality. Preventing such writes ensures robust and secure code.</p>",
        "<p><b>Non-Compliant Example</b></p>",
        "<pre><code language=\"C++\">int arr[5] = {0};",
        "arr[5] = 1; /* Non-compliant: Out-of-bounds write at index 5 */</code></pre>",
        "<p><b>Developer's Note:</b></p>",
        "<p>This check only covers the out-of-bounds writing of arrays like that of the given example.</p>"
      ]
    }
  }
}
