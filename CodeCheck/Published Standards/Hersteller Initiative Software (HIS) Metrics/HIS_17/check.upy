from understand import Check, Db, Ent
ERR1 = 'MISRA Violations reported: %1'

def ids() -> tuple[str]:
    return ('HIS_17')


def name(id: str) -> str:
    return {
        'HIS_17': 'Published Standards/Hersteller Initiative Software (HIS) Metrics/17. MISRA-HIS Violations (NOMV)',
    }[id]


def tags(id: str) -> str:
    return {
        'HIS_17': [
          "Language: C",
          "Language: C++",
          "Standard: Hersteller Initiative Software (HIS) Metrics",
          "Metrics",
          "Extra Setup"
        ]
    }.get(id)


def detailed_description(id: str) -> str:
    return '''\
 <b><span style=\"color:red\">Requires extra setup!</span></b>
        <p><b>Rationale</b></p>
        <p>Number of MISRA-HIS subset violations</p>
        <p><b>Developer's Notes</b></p>
        <p> A separate CodeCheck configuration needs to be enabled for this metric.<br>Open Tools - Plugins, find and open "MISRA HIS Subset" and hit the Run Button to automatically configure these checks to run in the background</p>
        <p>Refer to <a href="https://blog.scitools.com/hersteller-initiative-software-his-metrics/">this article</a> for more details.</p>
'''


def test_entity(file: Ent):
    return True


def test_global():
    return False


def check(check: Check, file):
  val = file.metric("HISNOMV")
  if val > 0:
    check.violation(file, file, 0, 0, ERR1, val)
  return
