# This script is designed to run with Understand - CodeCheck
# Written by Jordan Colbeth
# 11-22-2022

import re


ERR1 = "compareTo method should not be implemented via the Comparable interface"


def ids():
    return ('MET10-J', 'JAVA_MET10')


def name(id):
    return {
        'MET10-J': '''Published Standards/SEI Cert Standards/Java/\
Follow the general contract when implementing the compareTo() method''',
        'JAVA_MET10': '''All Checks/Language Specific/Java/Methods/\
Follow the general contract when implementing the compareTo() method'''
    }[id]





def tags(id):
    return {
        'MET10-J': [
            'Language: Java',
            'Standard: SEI CERT Java',
            'Severity: 50',
            'Likelihood: Unlikely',
            'Remediation Cost: Medium',
            'Priority: P4',
            'Level: L3',
        ],
        'JAVA_MET10': [
            'Language: Java',
            'Methods',
        ],
    }.get(id)

def detailed_description():
    return '''
<p>
Follow the general contract when implementing the compareTo() method
</p>

<p><b>Risk Assessment</b></p>
<p>
Violating the general contract when implementing the compareTo() method can cause unexpected results, possibly leading to invalid comparisons and information disclosure.
</p>

<p>
For the full standard:
<i>
https://wiki.sei.cmu.edu/confluence/display/java/MET10-J.+Follow+the+general+contract+when+implementing+the+compareTo%28%29+method
</i>
</p>

<p><b>Noncompliant Code Example</b></p>
<pre><code language="Java">class GameEntry implements Comparable {
  public enum Roshambo {ROCK, PAPER, SCISSORS}
  private Roshambo value;

  public GameEntry(Roshambo value) {
    this.value = value;
  }

  public int compareTo(Object that) {
    if (!(that instanceof GameEntry)) {
      throw new ClassCastException();
    }
    GameEntry t = (GameEntry) that;
    return (value == t.value) ? 0
      : (value == Roshambo.ROCK && t.value == Roshambo.PAPER) ? -1
      : (value == Roshambo.PAPER && t.value == Roshambo.SCISSORS) ? -1
      : (value == Roshambo.SCISSORS && t.value == Roshambo.ROCK) ? -1
      : 1;
  }
}
</code></pre>
<p><b>Developer Note</b></p>
<p>
This check does not provide full coverage of the standard, as the correct implementation of the compareTo method is beyond the scope of static analysis.
Instead, it reports implementation of the Comparable interface, which represents a commitment that
the implementation of the compareTo() method adheres to the general contract for that method regarding how the method is to be called.
</p>
'''


def test_language(language):
    return language == 'Java'


def test_entity(file):
    return file.kind().check('java file')


def test_global():
    return False


def check(check, file):
    for compare_ref in file.filerefs("Define", "Public Method"):
        compare_ent = compare_ref.ent()
        if compare_ent.name() == "compareTo":
            parent = compare_ent.parent()

            coupling = parent.ref("Java Implement Couple")

            if not coupling:
                continue
            else:
                if coupling.ent().name() == "Comparable":
                    check.violation(compare_ent, file, compare_ref.line(), compare_ref.column(), ERR1)


