ERR1 = 'Do not serialize instances of inner classes.'


# The ID for the check
def ids():
    return ('SER05-J', 'JAVA_SER05')


# The short name of the check
def name(id):
    return {
        'SER05-J': 'Published Standards/SEI Cert Standards/Java/Do not serialize instances of inner classes',
        'JAVA_SER05': 'All Checks/Language Specific/Java/Serialization/Do not serialize instances of inner classes',
    }[id]





def tags(id):
    return {
        'SER05-J': [
            'Language: Java',
            'Standard: SEI CERT Java',
            'Severity: 50',
            'Likelihood: Likely',
            'Remediation Cost: Medium',
            'Priority: P12',
            'Level: L1',
        ],
        'JAVA_SER05': [
            'Language: Java',
            'Serialization',
        ],
    }.get(id)

# The short description of the check
def description():
    return 'Do not serialize instances of inner classes'


# The long description of the check
def detailed_description():
    return """
<p>Do not serialize instances of inner classes</p>
<p><b>Risk Assessment</b></p>
<p>Serialization of inner classes can introduce platform dependencies and can cause serialization of instances of the outer class.</p>
<p>For the full standard: <i>https://wiki.sei.cmu.edu/confluence/display/java/SER05-J.+Do+not+serialize+instances+of+inner+classes</i></p>
<p><b>Noncompliant Code Example</b></p>
<pre><code language="Java">public class OuterSer implements Serializable {
  private int rank;
  class InnerSer implements Serializable {
    protected String name;
    // ...
  }
}
</code></pre>
"""


# Tests the type of file
def test_entity(file):
    return file.kind().check('java file')


def test_global():
    return False


def test_language(language):
    return language == 'Java'


def check(check, file):
    for class_ref in file.filerefs("Define", "Class Type"):
        for innerclass_ref in class_ref.ent().refs("Define", "Class Type Member ~Static"):
            for ref in innerclass_ref.ent().refs("Implement Couple", "Interface Type"):
                if ref.ent().name() == "Serializable":
                    check.violation(ref.ent(), file, ref.line(),
                                    ref.column(), ERR1)
                    break
