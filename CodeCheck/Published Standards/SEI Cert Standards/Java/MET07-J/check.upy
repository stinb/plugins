ERR1 = 'Never declare a class method that hides a method declared in a superclass or superinterface.'


# The ID for the check
def ids():
    return ('MET07-J', 'JAVA_MET07')


# The short name of the check
def name(id):
    return {
        'MET07-J': 'Published Standards/SEI Cert Standards/Java/Never declare a class method that hides a method declared in a superclass or superinterface',
        'JAVA_MET07': 'All Checks/Language Specific/Java/Methods/Never declare a class method that hides a method declared in a superclass or superinterface',
    }[id]





def tags(id):
    return {
        'MET07-J': [
            'Language: Java',
            'Standard: SEI CERT Java',
            'Severity: 25',
            'Likelihood: Unlikely',
            'Remediation Cost: Medium',
            'Priority: P2',
            'Level: L3',
        ],
        'JAVA_MET07': [
            'Language: Java',
            'Methods',
        ],
    }.get(id)

# The short description of the check
def description():
    return 'Never declare a class method that hides a method declared in a superclass or superinterface'


# The long description of the check
def detailed_description():
    return """
<p>Never declare a class method that hides a method declared in a superclass or superinterface</p>
<p><b>Risk Assessment</b></p>
<p>Confusing overriding and hiding can produce unexpected results.</p>
<p>For the full standard: <i>https://wiki.sei.cmu.edu/confluence/display/java/MET07-J.+Never+declare+a+class+method+that+hides+a+method+declared+in+a+superclass+or+superinterface</i></p>
<p><b>Noncompliant Code Example</b></p>
<pre><code language="Java">class GrantAccess {
  public static void displayAccountStatus() {
    System.out.println("Account details for admin: XX");
  }
}

class GrantUserAccess extends GrantAccess {
  public static void displayAccountStatus() {
    System.out.println("Account details for user: XX");
  }
}

public class StatMethod {
  public static void choose(String username) {
    GrantAccess admin = new GrantAccess();
    GrantAccess user = new GrantUserAccess();
    if (username.equals("admin")) {
      admin.displayAccountStatus();
    } else {
      user.displayAccountStatus();
    }
  }

  public static void main(String[] args) {
    choose("user");
  }
}
</code></pre>
"""


# Tests the type of file
def test_entity(file):
    return file.kind().check('java file')


def test_global():
    return False


def test_language(language):
    return language == 'Java'


def check(check, file):
    for class_ref in file.filerefs("Extendby Implicit", "Class"):
        for method_ref in class_ref.ent().refs("Define", "Static Method Member"):
            for overriden_ref in method_ref.ent().refs("Overriddenby"):
                check.violation(overriden_ref.ent(), overriden_ref.file(),
                                overriden_ref.line(), overriden_ref.column(), ERR1)
