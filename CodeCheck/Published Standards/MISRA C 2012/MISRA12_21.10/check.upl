#This script is designed to run with Understand - CodeCheck
use base ("Understand::Codecheck");
use strict;


use constant ERR1 => 'time.h used ';

sub register_tr_text() {
  my $check = shift;
  $check->add_tr_text(ERR1);
}

sub checkID { return "MISRA12_21.10";}


sub name { return "Published Standards\\MISRA C 2012\\21.10 The Standard Library time and date functions shall not be used";}

sub tags {
  return (
    'Language: C',
    'Standard: MISRA C 2012',
    'Category: Required',
    'Libraries',
  );
}

sub description { return "21.10 (Required) The Standard Library time and date functions shall not be used";}

sub detailed_description { return <<"END_DESC"
<p><b>Amplification</b></p>
None of the facilities that are specified as being provided by &lt;time.h&gt; shall be used.
In C99, the identifier <i>wcsftime</i> shall not be used and no macro with this name shall be expanded.
</p>

<p><b>Rationale</b></p>
The time and date functions have unspecified, undefined and implementation-defined behaviours
associated with them.
</p>
END_DESC
}

sub test_language {
  my $language = shift;
  return $language =~ /C\+\+/; #Handles C and C++
}


sub test_entity { return 1;}

sub test_global { return 0;}

sub define_options {
  my $check = shift;
  $check->option->checkbox( 'oneViolation', 'Limit one violation per file?', 1 );
}

our %seen;
sub check {
  my $check = shift;
  my $file = shift;
  return unless $file->kind->check("c file ~unknown ~unresolved");
 	foreach my $libFuncs($file->filerefs()){
		my $libUsed = includeCheck($file,$check);
    if($libUsed){
      $check->violation($libFuncs->ent,$file,$libFuncs->line,$libFuncs->column,ERR1);
    }
  }
  %seen=();
}

sub includeCheck {
  my $file = shift;
  my $check = shift;

  if ($seen{$file->id}){
    return 0;
  }
  $seen{$file->id}=1 if $check->option->lookup( 'oneViolation' );
  if($file->name eq "time.h"){
    return 1;
  }
  my @refs = $file->refs("include","file",1);
  foreach my $ref (@refs){
    return 1 if includeCheck($ref->ent, $check);
  }
}
