#This script is designed to run with Understand - CodeCheck
use base ("Understand::Codecheck");
use strict;


sub register_tr_text() {
  my $check = shift;
}

sub checkID { return "MISRA12_21.5";}


sub name { return "Published Standards\\MISRA C 2012\\21.5 The standard header file signal.h shall not be used";}

sub tags {
  return (
    'Language: C',
    'Standard: MISRA C 2012',
    'Category: Required',
    'Libraries',
  );
}

sub description { return "21.5 (Required) The standard header file &lt;signal.h&gt; shall not be used";}

sub detailed_description { return <<"END_DESC"
<p><b>Amplification</b></p>
None of the facilities that are specified as being provided by &lt;signal.h&gt; shall be used.
</p>

<p><b>Rationale</b></p>
Signal handling contains implementation-defined and undefined behaviour.
</p>

END_DESC
}


sub test_language {
  my $language = shift;
  return $language =~ /C\+\+/; #Handles C and C++
}

sub test_entity { return 1;}

sub test_global { return 0;}

sub define_options {
  my $check = shift;
  $check->option->checkbox( 'oneViolation', 'Limit one violation per file?', 1 );
}

our %seen;
sub check {
  my $check = shift;
  my $file = shift;
  return unless $file->kind->check("c file ~unknown ~unresolved");

  my @refs = $file->refs("include","file",1);

  foreach my $ref (@refs){

    next if ($seen{$file->id});

    if($ref->ent->name eq "signal.h"){
      $seen{$file->id}=1 if $check->option->lookup( 'oneViolation' );
      $check->violation($file,$file,$ref->line,$ref->column,"header file signal.h used.");
    }
  }
  %seen=();
}


