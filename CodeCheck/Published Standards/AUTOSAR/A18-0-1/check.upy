# This script is designed to run with Understand - CodeCheck
# Written by Jason Quinn
# 12-07-2021
import re

ERR1 = 'C library facilities was accessed through a C library header'
C_LIBRARIES = {'assert.h', 'ctype.h', 'errno.h', 'float.h', 'iso646.h',
        'limits.h', 'locale.h', 'math.h', 'setjmp.h', 'signal.h', 'stdarg.h',
        'stdbool.h', 'stddef.h', 'stdint.h', 'stdio.h', 'stdlib.h', 'string.h',
        'time.h', 'uchar.h', 'wchar.h', 'wctype.h'}

def ids():
    return ('A18-0-1', 'CPP_L001', 'MISRA08_18-0-1')

def name(id):
    return {
        'A18-0-1': 'Published Standards/AUTOSAR/The C library facilities shall only be accessed through C++ library headers',
        'CPP_L001': 'All Checks/Language Specific/C and C++/Libraries/The C library shall not be used',
        'MISRA08_18-0-1': 'Published Standards/MISRA-C++ 2008/18-0-1 The C library shall not be used'
    }[id]



def tags(id):
    return {
        'MISRA08_18-0-1': [
            'Language: C',
            'Language: C++',
            'Standard: MISRA C++ 2008',
            'Category: Required',
            'Libraries',
        ],
        'A18-0-1': [
            'Language: C',
            'Language: C++',
            'Standard: AUTOSAR',
            'Category: Required',
            'Automation: Automated',
            'Libraries',
        ],
        'CPP_L001': [
            'Language: C',
            'Language: C++',
            'Libraries',
        ],
    }.get(id)

def detailed_description():
    return """\
<p><b>Rationale</b></p>
<p>C libraries (e.g. &lt;stdio.h&gt;) also have corresponding C++ libraries (e.g. &lt;cstdio&gt;). This
rule requires that the C++ version is used.</p>
"""

def test_entity(file):
    return file.kind().check('code file, header file')

def test_language(language):
    return language == 'C++'


def check(check, file):
    refs = file.filerefs('Include', 'Unresolved')

    for ref in refs:
        if ref.ent().name() in C_LIBRARIES:
            check.violation(ref.ent(), file, ref.line(), ref.column(), ERR1)
