# This script is designed to run with Understand - CodeCheck
# Written by Jason Quinn
# 6/9/25

import Modules
import re

ERR1 = 'Out-of-bounds Read'


# The ID for the check
def ids():
    return ('CWE-125')

# The short name of the check
def name(id):
    return {
        'CWE-125': 'Published Standards/MITRE-CWE/' + """\
Out-of-bounds Read""",
    }[id]




def tags(id):
    return {
        'CWE-125': [
            'Language: C',
            'Language: C++',
            'Standard: MITRE CWE Top 25',
            'Memory Allocation',
        ],
    }.get(id)


# The long description of the check
def detailed_description(id):
    desc = """\
<p><b>Amplification</b></p>
<p>Out-of-bounds Read occurs when a program accesses memory outside the
designated buffer, which can compromise security by exposing sensitive data or
destabilizing the system.</p>
<p>This vulnerability can allow attackers to access confidential data, bypass
security mechanisms, or crash applications, impacting confidentiality,
availability, and system integrity.</p>
"""
    return {
        'CWE-125': desc,

    }[id]

# Tests the type of file
def test_entity(file):
    return file.kind().check('file')

def test_global():
    return False

def test_language(language):
    return language in ['C++']

def check(check, file):
    lexer = None
    refs = file.filerefs('Use', 'Object')
    for ref in refs:
        if not re.search(r'(\[.*\])', str(ref.ent().type())):
            continue
        if not lexer:
            lexer = file.lexer()

        # Gather size inside '[]'
        size = re.sub(r'(.*\[)|(\].*)', '', str(ref.ent().type()))
        size = re.sub(r'[^\d]', '', size)
        if size.isdigit():
            size = int(size)
        else:
            continue
        lexeme = lexer.lexeme(ref.line(), ref.column())
        if lexeme:
            lexeme = lexeme.next(True, True)
            # Look for violations until ']'
            if lexeme and lexeme.text() == '[':
                while lexeme and lexeme.text() != ']':
                    if (lexeme.text().isdigit() and int(lexeme.text()) > size) or (lexeme.ent() and lexeme.ent().value() and int(lexeme.ent().value()) > size):
                        check.violation(ref.ent(), file, ref.line(), ref.column(), ERR1)
                    lexeme = lexeme.next(True, True)
