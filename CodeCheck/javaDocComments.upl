#This script is designed to run with Understand - CodeCheck
use base ("Understand::Codecheck");
use strict;
use warnings;


# Required - Return the short name of the check
sub name { return "Identify Javadoc Comments";}

# Required - return the unique identifier for this check. This should be a unique string not used anywhere else.
sub checkID { return "CC_PLUG_03";}

# Required - Return the short description of the check
sub description { return "There is a javadoc comment";}

# Required - Return the long description of the check
sub detailed_description { return "Javadoc comments are in the form /**  */";}

# Required - Test the language of the current file, the check will be 
# skipped if this returns 0
sub test_language {
  my $language = shift;
  #return $language eq "C++"; 
  return 1;
}

# Required - Return 1 if this check will be run on a per-entity basis
# Currently only supported on a per-file basis
sub test_entity { return 1;}

# Required - Return 1 if this check should be run on the entire project
# regardless of what files are selected. Should only be used for 
# project-level checks
sub test_global { return 0;}

# Optional - define configurable options for the check.
sub define_options{
  my $check = shift;  
}


# Required - Run the check and return violations if any.
# This is called for each file if test_entity is set to 1 and $file is the Understand::Ent object for the file
# it is also called once with $file set to null if test_global is set to 1
sub check {
  my $check = shift; #The check object, needed to report violations and lookup option values
  my $file = shift;  # Will be empty if test_global set to 1 and test_entity set to 0
  
  # test_entity only runs on files for now, but could change in the future, so force the check to only run on files
  return unless $file->kind->check("file"); 
  
  my $lexer = $file->lexer;
  my $lexeme = $lexer->first();
  
  while ($lexeme){
    next unless $lexeme->token eq "Comment";
    next unless $lexeme->text =~ /^\/\*\*.*\*\//; # match comments in the form /** ... */
    $check->violation($file,$file,$lexeme->line_begin,$lexeme->column_begin,"Javadoc comment found");
  }continue{
    $lexeme = $lexeme->next;
  }
}