# Categorize files as active (modified at least twice in the last 30 days)
# recurrently active (active for multiple 30 day periods) or stable.
# Make sure to also install git_util.py

import datetime
import git_util

def name():
  return "Git Stability"
  
def description():
  return '''
Categorize files as active, recurrently active or stable based on Git history.

<p>This plugin categorizes files based on their Git commit history. Files are classified as:

<ul>
<li><b>Active:</b> Modified at least twice in the last 30 days.</li>
<li><b>Recurrently Active:</b> Active for multiple 30 day periods.</li>
<li><b>Stable:</b> Not meeting the criteria for active or recurrently active.</li>
</ul>
'''

def build(arch, db):
  today = datetime.date.today()
  past30 = today - datetime.timedelta(30)
  past60 = today - datetime.timedelta(60)

  isoDates = git_util.gitIsoDates(arch,db)
  for file, dateList in isoDates.items():
    if dateList:
      active = 0
      recActive = 0
      for dtStr in dateList:
        dt = datetime.datetime.fromisoformat(dtStr).date()
        if dt > past30:
          active += 1
        elif dt > past60:
          recActive += 1
        else:
          break;

      label = ["Stable"]
      if active >= 2:
        if recActive >= 2:
          label = ["Recurrently Active"]
        else:
          label = ["Active"]
      path = file.relname()
      path.replace("\\","/")
      label.extend(path.split("/"))
      arch.map(file, "/".join(label[:-1]))

