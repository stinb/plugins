# Create a relative calendar (today, this week, this year) from the date
# of the file's most recent commit.
# Make sure to also install git_util.py

import datetime
import git_util

def name():
  return "Git Last Modified(Relative)"

def description():
  return '''
Categorizes files based on their last modified date relative to today.

<p>This plugin utilizes Git to determine the last modified date of files within your project. It then categorizes each file 
into intuitive timeframes such as "Today", "This Week", "This Month", etc., making it easier to identify recently 
modified files.</p>
'''


def build(arch, db):
  today = datetime.date.today()
  relativeTo = [
    ("Today", today),
    ("Yesterday", today - datetime.timedelta(days=1)),
    ("This Week", today - datetime.timedelta(days=7)),
    ("This Month", datetime.date(year=today.year, month=today.month, day=1)),
    ("This Quarter", datetime.date(year=today.year, month=today.month - ((today.month-1)%3), day=1)),
    ("This Year", datetime.date(year=today.year, month=1, day=1))
  ]

  isoDates = git_util.gitIsoDates(arch,db)
  for file, dateList in isoDates.items():
    if dateList:
      dt = datetime.datetime.fromisoformat(dateList[0]).date()
      label = "Earlier"
      for relTo in relativeTo:
        if dt >= relTo[1]:
          label = relTo[0]
          break;
      arch.map(file, label)

