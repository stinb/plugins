# Generate an architecture by month and year the file was last modified in Git
# Make sure to also install git_util.py

import datetime
import und_lib.git_util as git_util

def name():
  return "Git Last Modified(Absolute)"

def build(arch, db):
  isoDates = git_util.gitIsoDates(arch,db)
  for file, dateList in isoDates.items():
    if dateList:
      dt = datetime.datetime.fromisoformat(dateList[0])
      arch.map(file, dt.strftime("%Y/%m"))


def description():
  return '''Generate an architecture based on file modification time from Git
    <p>This plugin utilizes Git metadata to organize your architecture based on when files were last modified.
It extracts the last modified date from Git history and maps each file to a corresponding month and year directory
structure (e.g., 2023/12). This approach provides insights into the evolution of your codebase over time, aiding in
identifying areas of active development or legacy code.</p>
'''
