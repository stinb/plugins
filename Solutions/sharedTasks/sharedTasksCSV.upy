def description():
  return '''Generates a CSV file of shared tasks for a specified architecture.
    <p>This plugin generates a CSV file containing information about shared tasks within a specified architecture.  It provides options to customize the generated CSV file, such as choosing specific columns and filtering by task type.</p>
    <br><a href="https://github.com/stinb/plugins/blob/main/Solutions/sharedTasks/README.md">Full instructions for using this plugin</a>
    '''



# Command line interface for creating a CSV of an architecture of shared tasks


from sharedTasksCSV import *


def name() -> str:
    return 'Shared Tasks CSV'


def test_architecture(arch: Arch) -> bool:
    return True


def init(report: IReport):
    for option in CSV_OPTIONS:
        # Checkbox
        if option.name == "Function Pointer":
            continue
        if option.choices == OPTION_BOOL_CHOICES:
            report.options().checkbox(option.key, option.name, option.default == OPTION_BOOL_TRUE)
        # Choice
        elif option.choices:
            report.options().choice(option.key, option.name, option.choices, option.default)
        # Text
        else:
            report.options().text(option.key, option.name, option.default)


def generate(report: IReport, target: Arch | Ent | Db):
    # Options
    options = dict() # type: dict[str, str | bool]
    for option in CSV_OPTIONS:
        options[option.key] = report.options().lookup(option.key)

    # Export file and print lines to report
    generateCSV(report.db(), target, options, report)
