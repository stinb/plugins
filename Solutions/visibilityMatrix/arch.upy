# Access the visibility matrix groups as an architecture in Understand

from matrix import DepMatrix

def name():
  return "Visibility Matrix"

def define_options(arch):
  arch.options().radio_vert("strategy", "Clustering Strategy", ["Automatic", "Core", "Median"], "Automatic")

def generate(arch, db):
  m = DepMatrix(set(db.ents("file ~unknown ~unresolved")))
  strategy = "auto"
  if hasattr(arch, "options") and arch.options().lookup("strategy") != "Automatic":
    strategy = arch.options().lookup("strategy").lower()
  m.classify(strategy)
  type = m.type
  for i in range(m.size()):
    arch.map(m.entityAt(i), type + "/" + m.categories[m.valueAt(i,"class")])
