#!/bin/bash
# ================================================================================================================
# Version 1.0.0
# ================================================================================================================
VERSION=1.0.0
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
# ================================================================================================================
DDD_INSTALL_DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
DDD_CURRENT_DIR=`pwd`
# ================================================================================================================
function usage() {
	echo "ERROR: $1"
	exit
	return
}
# ================================================================================================================
echo "We will install from '$DDD_INSTALL_DIR' (current Running dir '$DDD_CURRENT_DIR')"
# ================================================================================================================
DIR_SCITOOLS_CONFIG=~/.config/SciTools
DIR_PLUGIN=~/.config/SciTools/plugin
DIR=~/.config/SciTools/plugin/Graph
DIR2=~/.config/SciTools/plugin/Codecheck
if [ -d "$DIR_SCITOOLS_CONFIG" ]; then
  echo "Found the Scitools configuration at '$DIR_SCITOOLS_CONFIG', that's good....";
else
  ###  Control will jump here if $DIR does NOT exists ###
  usage "Seems like SciTools is not installed. No user configuration directory found."
fi
echo ------------------------------------------------------------------
if [ -d "$DIR_PLUGIN" ]; then
  echo "Found the Scitools plugin directory at '$DIR_PLUGIN', that's good....";
else
  echo "Creating the plugin directory at '$DIR_PLUGIN' ...";
  mkdir $DIR_PLUGIN
fi
echo ------------------------------------------------------------------
if [ -d "$DIR" ]; then
  echo "Found the Scitools graph directory at '$DIR', that's good....";
else
  echo "Creating the graph directory at '$DIR' ...";
  mkdir $DIR
fi
echo ------------------------------------------------------------------
if [ -d "$DIR2" ]; then
  echo "Found the Scitools codecheck directory at '$DIR2', that's good....";
else
  echo "Creating the graph directory at '$DIR2' ...";
  mkdir $DIR
fi
echo ------------------------------------------------------------------
echo "Applying Configuration to Files configuration file...";
DDD_INSTALL_DIR_QQ=$(echo "$DDD_INSTALL_DIR" | sed 's/\//\\\//g')
uperl -pi.bak -e "s/___D___/$DDD_INSTALL_DIR_QQ\//g" "$DDD_INSTALL_DIR/comparison.py"
uperl -pi.bak -e "s/___D___/$DDD_INSTALL_DIR_QQ\//g" "$DDD_INSTALL_DIR/architectureparser.py"
uperl -pi.bak -e "s/___D___/$DDD_INSTALL_DIR_QQ\//g" "$DDD_INSTALL_DIR/pather.py"
uperl -pi.bak -e "s/___D___/$DDD_INSTALL_DIR_QQ\//g" "$DDD_INSTALL_DIR/GraphPathViewer.upy"
uperl -pi.bak -e "s/___D___/$DDD_INSTALL_DIR_QQ\//g" "$DDD_INSTALL_DIR/GraphComparison.upy"
uperl -pi.bak -e "s/___D___/$DDD_INSTALL_DIR_QQ\//g" "$DDD_INSTALL_DIR/ComparisonCodeCheck.upy"
rm "$DDD_INSTALL_DIR/comparison.py.bak"
rm "$DDD_INSTALL_DIR/architectureparser.py.bak"
rm "$DDD_INSTALL_DIR/pather.py.bak"
rm "$DDD_INSTALL_DIR/GraphPathViewer.upy.bak"
rm "$DDD_INSTALL_DIR/GraphComparison.upy.bak"
rm "$DDD_INSTALL_DIR/ComparisonCodeCheck.upy.bak"
echo ------------------------------------------------------------------
echo "Installing GRAPH...";
cp "$DDD_INSTALL_DIR/GraphPathViewer.upy" $DIR
cp "$DDD_INSTALL_DIR/GraphComparison.upy" $DIR
echo "Installing CodeCheck...";
cp "$DDD_INSTALL_DIR/ComparisonCodeCheck.upy" $DIR2
echo ------------------------------------------------------------------
echo Success!
# ================================================================================================================

