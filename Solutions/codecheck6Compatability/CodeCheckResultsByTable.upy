


# CodeCheckResultsByTable

import cccompatability

def name():
  return "CodeCheck Results By Table"

def description():
  return ''' Displays CodeCheck results in a table format.
    <p>This plugin displays CodeCheck violations in an Understand table, providing details such as file, violation message, location, entity, kind, check ID, name, description, and severity.  It offers options to customize the report name format and display of ignored violations.</p>'''

def test_inspection(inspection):
  return True

def init(report):
  cccompatability.init(report)
  report.options().choice("reportnameformat",  "Report Name Format", ["absolute", "relative", "short"], "absolute")

def test_options(report):
  return cccompatability.test_options(report)

# Report generation
def generate(report, inspection):
  vlist = cccompatability.violations(report, inspection)

  # file name format
  format = report.options().lookup("reportnameformat")
  filenames = cccompatability.fileNamesDict(report, format)

  # check info
  checkname, checkseverity = cccompatability.checkinfo(inspection)

  fp = report.options().lookup("showignored") or report.options().lookup("ignoredonlyresults")
  cols = ["File", "Violation", "Line", "Column", "Entity", "Kind", "CheckID", "Check Name", "Check Short Description", "Severity"]
  if fp:
    cols.append("Ignored")

  report.table(cols)
  for v in vlist:
    cccompatability.violationTableRow(report, v, cols, checkname, checkseverity, filenames)

