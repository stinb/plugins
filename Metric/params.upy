import understand

ENT_KINDS=("ada entry, ada function, ada procedure, ada protected, ada task,"
  "c function,"
  "csharp method,"
  "fortran block data, fortran function, fortran interface, fortran program, fortran subroutine,"
  "java method,"
  "jovial subroutine,"
  "pascal compunit, pascal function, pascal procedure,"
  "vhdl procedure, vhdl function, vhdl process, vhdl architecture,"
  "web function, web method")

def ids():
  return ["CountParams"]

def name(id):
  if id == "CountParams":
    return "Parameters"

def description(id):
  if id == "CountParams":
    return '''The number of parameters
    Also known as Hersteller Initiative Software (HIS) PARAM metric.
    '''

def test_available(metric,entkindstr):
  # Kind check if requested
  if entkindstr:
    my_kinds = set(understand.Kind.list_entity(ENT_KINDS))
    test_kinds = set(understand.Kind.list_entity(entkindstr))
    return len(my_kinds.intersection(test_kinds)) > 0

  return True

def is_integer(id):
   return True

def test_entity(metric, ent):
  return ent.kind().check(ENT_KINDS)

def value(metric, ent):
  params = ent.parameters()
  if not params:
    return 0
  return len(params.split(','))
