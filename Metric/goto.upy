import understand

def ids():
  return ["CountGoTo"]

def name(id):
  if id == "CountGoTo":
    return "Goto Statements"

def description(id):
  if id == "CountGoTo":
    return '''<p>For C++ functions, the number of gotos in a function</p>
    <p>Also known as <a href="und://plugins/Solutions/.doc/manager_his.md?filter=Solution%3A%22Hersteller%20Initiative%20Software%20(HIS)%22">
    Hersteller Initiative Software (HIS)</a> GOTO metric.</p>
    '''

def tags(id):
  return [
    'Solution: Hersteller Initiative Software (HIS)',
    'Target: Functions',
    'Language: C',
    'Language: C++'
  ]

def test_available(metric,entkindstr):
  # Kind check if requested
  if entkindstr:
    my_kinds = set(understand.Kind.list_entity("c function ~unresolved"))
    test_kinds = set(understand.Kind.list_entity(entkindstr))
    return len(my_kinds.intersection(test_kinds)) > 0

  # GoTo is C++
  return "C++" in metric.db().language()

def is_integer(id):
   return True

def test_entity(metric, ent):
  return ent.language() == "C++" and ent.control_flow_graph()

def value(metric, ent):
  count = 0
  for node in ent.control_flow_graph().nodes():
    if node.kind() == "goto":
      count += 1
  return count
