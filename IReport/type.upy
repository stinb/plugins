# IReport to display type and underlying type


import understand


def name():
    return 'Type'


def test_global(db):
    return False


def test_entity(ent):
    return True


def test_architecture(arch):
    return False


def init(report):
    pass


def generate(report, target):
    report.print(f'{target}\n')

    if target.kind().check('Type'):
        report.print('    (This is a type)\n')

    printType(report, 'Type', target.type())
    printType(report, 'Underlying Type', target.freetext('UnderlyingType'))


def printType(report, header, entType):
    if entType:
        report.print(f'    {header}: {entType}\n')
