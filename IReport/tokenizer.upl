# IReport demonstrating the lexer

#
# options
#

my $filter = "";

#
# globals
#

my $kind ="~unknown ~unresolved";


#
# overrides
#

use base ("Understand::IReport");

sub name { return "Tokenizer"; }

sub test_entity {
  my $entity = shift;
  my $result = ($entity->kind()->check($kind));
  return $result;
}

sub test_global { return 0; }

sub init {
  my $report = shift;
  $report->option->checkbox("expand","Expand Macro Text (Must save macro expansion text in C++ Options)",1); # create a checkbox option
  $report->option->checkbox("whitespace","Show Whitespace",0); # create a checkbox option
}

sub generate {
  my $report = shift;
  my $ent = shift;
  my ($file,$lineNum,$endLine,$definein,$lexer,$stream);

  if ($ent->kind->check("file")){
    $file = $ent;
    $endLine = 50000;
    $lineNum = 1;
  }else{
    $definein = $ent->ref("definein, body declarein");
    $file = $definein->file;
    $lineNum = $definein ? $definein->line():1;
    $endLine = $ent->ref("end")? $ent->ref("end")->line():50000;
  }
  my $status;
  ($lexer,$status) = $file->lexer(1,2,1,$report->option->lookup("expand"));
  die "Could not create lexer for ".$file->name.": $status" unless $lexer;
  $stream = $lexer->lexeme($lineNum, 0);

  while ($stream && $stream->line_end <= $endLine)
  {
      $report->fontcolor("#000000");

      $report->entity($stream->ent) if $stream->ent;
      $report->print($stream->text);
      $report->entity();
      $report->fontcolor("#077516");
      $report->print ("<".$stream->token()) if ($stream->token !~ /Whitespace|Newline/ || $report->option->lookup("whitespace"));
      #$report->fontcolor("#077516");
      #$report->print ("ENT:".$stream->ent->name) if $stream->ent;
      $report->fontcolor("#FF0000");
      $report->print (", ".$stream->ent->kind->longname) if $stream->ent;
      $report->fontcolor("#077516");
      $report->print (", ".$stream->ref->kind->longname) if $stream->ref;
       $report->print ("(".$stream->line_begin.",".$stream->column_begin.")");
      $report->fontcolor("#033516");
      $report->print (">")  if ($stream->token !~ /Whitespace|Newline/ || $report->option->lookup("whitespace"));
      $report->fontcolor("#000000");
      $report->print(($stream->line_begin+1).": ") if $stream->token eq "Newline";
      $stream = $stream->next;
  }
  $report->print("\n");
}
