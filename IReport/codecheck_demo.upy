# Interactive Report using codecheck

def name():
  return "Codecheck Report"

def description():
  return '''Codecheck Demo Plugin
    <p> The Codecheck Demo plugin is an example plugin showing how to generate
    an interactive report for CodeCheck results using the Understand Python API.
    The plugin shows up to two graphs
    (<a href="und://plugin/graph/Top%20Checks-Custom">Top Checks</a> and
    <a href="und://plugin/graph/Violations%20By%20Ignore-Custom">Violations By
    Ignore</a>), followed by summary metrics in a table.</p>

    <br><img src=".doc/class_metrics.png"/>
    '''

def tags():
  return [
    'Target: CodeCheck',
    'Demo',
  ]

def test_inspection(inspection):
  return True

# Report generation
def generate(report, inspection):
  vlist = inspection.violations()
  cnt = len(vlist)

  # Find summary information
  summary = {
    "Total Violations" : cnt,
    "Checks" : len(inspection.config().checks()) if inspection.config() else 0,
    "Files" : len(inspection.files()),
    "Errors" : len(inspection.errors()),
    "Start" : inspection.start_time(),
    "End" : inspection.end_time()
  }

  # Find out if a violation was ignored and how
  hadIgnores = False
  for v in vlist:
    if v.ignores():
      hadIgnores = True
      visited = set()
      for src, note in v.ignores():
        if not src in visited:
          visited.add(src)
          summary[src] = summary.get(src,0) + 1
    else:
      summary["Violations"] = summary.get("Violations",0) + 1

  # Graphs can be drawn for inspections. Draw graph if there are
  # violations (graph not empty)
  if cnt:
    try:
      report.draw(inspection, "Top Checks")
    except Exception as e:
      report.print("Unable to draw \"Top Checks\" chart: {}\n".format(str(e)))

  if hadIgnores:
    try:
      report.draw(inspection, "Violations By Ignore")
    except Exception as e:
      report.print("Unable to draw \"Violations By Ignore\" chart: {}\n".format(str(e)))

  report.heading(2)
  report.print("Summary")
  report.heading()

  report.table(["Name", "Value"])
  for k,v in sorted(summary.items(),key=lambda item: item[0]):
    report.tablecell()
    report.print(k)
    report.tablecell()
    report.print(str(v))
  report.table()

