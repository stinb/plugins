# IReport provided by Tech Matrix
# Blog Article: https://blog.scitools.com/cool-plugins-for-code-maintenance/
# Use this report to help find low maintainibility classes. This report
# outputs classes that exceed user-defined thresholds for the metrics
# CountDeclMethod, CountClassCoupled, PercentLackOfCohesion.

use base ("Understand::IReport");
use Tie::RefHash;

sub name { return "Low Maintainability Classes"; }

sub test_entity { return -1; }

sub test_global { return 1; }

sub support_progress { return 1; }

sub init {
    my $report = shift;
    $report->option->integer("CountDeclMethod", "CountDeclMethod Threshold :", 20);
    $report->option->integer("CountClassCoupled", "CountClassCoupled Threshold :", 20);
    $report->option->integer("PercentLackOfCohesion", "PercentLackOfCohesion Threshold :", 90);
}

sub generate {
    my $report = shift;

    my $th_cdm = $report->option->lookup("CountDeclMethod");
    my $th_ccc = $report->option->lookup("CountClassCoupled");
    my $th_plc = $report->option->lookup("PercentLackOfCohesion");
    $th_cdm = 1 if $th_cdm < 1;
    $th_ccc = 1 if $th_ccc < 1;
    $th_plc = 1 if $th_plc < 1;

    # get classes and metrics
    tie my %classes, 'Tie::RefHash';
    my $class;
    foreach $class ($report->db->ents("class ~unknown ~unresolved")) {
        next if ($class->library() eq "Standard");
        my $CountDeclMethod = $class->metric("CountDeclMethod");
        my $CountClassCoupled  = $class->metric("CountClassCoupled");
        my $PercentLackOfCohesion = $class->metric("PercentLackOfCohesion");
        if ($CountDeclMethod >= $th_cdm || $CountClassCoupled >= $th_ccc || $PercentLackOfCohesion >= $th_plc) {
            my $var = {
                CountDeclMethod => $CountDeclMethod,
                CountClassCoupled  => $CountClassCoupled,
                PercentLackOfCohesion => $PercentLackOfCohesion,
            };
            $classes{$class} = $var;
        }
    }

    # draw header
    $report->bold();
    $report->print("CountDeclMethod >= $th_cdm or\n");
    $report->print("CountClassCoupled >= $th_ccc or\n");
    $report->print("PercentLackOfCohesion >= $th_plc\n");
    $report->nobold();
    $report->print("\n");

    $report->print("Name, CountDeclMethod, CountClassCoupled, PercentLackOfCohesion\n");

    # draw classes and metrics
    my $num = keys %classes;
    my $cur = 1;
    foreach my $ent (sort { $a->name() cmp $b->name(); } keys %classes) {
        $report->progress($cur++ / $num * 100);
        $class = $ent;
        $report->entity($class);
        $report->print($class->longname());
        $report->entity();

        $report->print(", ");

        $report->fontcolor("#ff0000") if $classes{$ent}->{CountDeclMethod} >= $th_cdm;
        $report->print($classes{$ent}->{CountDeclMethod});
        $report->fontcolor("#000000");
        $report->print(", ");
        $report->fontcolor("#ff0000") if $classes{$ent}->{CountClassCoupled} >= $th_ccc;
        $report->print($classes{$ent}->{CountClassCoupled});
        $report->fontcolor("#000000");
        $report->print(", ");
        $report->fontcolor("#ff0000") if $classes{$ent}->{PercentLackOfCohesion} >= $th_plc;
        $report->print($classes{$ent}->{PercentLackOfCohesion});
        $report->fontcolor("#000000");

        $report->print("\n");
    }
}
